---
- name: Copy over the nginx configuration file for the website
  include_tasks: webconfig.yml
  tags: hypothesis-web

- name: copy over the alembic config
  template:
    src: conf/alembic.ini
    dest: "{{ openstax_hypothesis_role.application_dir }}/conf/alembic.ini"
  tags: alembic-config

- name: Run the hypothesis initialization script
  command: "{{ openstax_hypothesis_role.virtualenv_bin_dir }}/python -m h init"
  environment:
      APP_URL: "{{ openstax_hypothesis_role.server_name }}"
  args:
    chdir: "{{ openstax_hypothesis_role.application_dir }}"
  tags: hypothesis-init

- name: Run the gulp build command
  command: "/usr/local/lib/npm/bin/gulp build"
  args:
    chdir: "{{ openstax_hypothesis_role.application_dir }}"
  tags: gulp-build

- name: copy over the application .service and .socket file
  template:
    src: "{{ item.value.template }}"
    dest: "{{ item.value.dest }}"
  with_dict: "{{ openstax_hypothesis_role.services }}"

- name: check and see if the sql directory exists
  stat:
    path: "{{ openstax_hypothesis_role.application_dir }}/sql"
  register: sql_home

- name: Create the sql directory if it does not exist
  file:
    path: "{{ openstax_hypothesis_role.application_dir }}/sql"
    state: directory
    mode: 0750
    owner: "{{ openstax_hypothesis_role.user }}"
    group: "{{ openstax_hypothesis_role.group }}"
  when: not sql_home.stat.exists

- name: Copy the research_export.sql file to the sql folder
  copy:
    src: annotation_export.sql
    dest: "{{ openstax_hypothesis_role.application_dir }}/sql/annotation_export.sql"
    mode: 0750
    owner: "{{ openstax_hypothesis_role.user }}"
    group: "{{ openstax_hypothesis_role.group }}"

- name: pip install box-exporter
  pip:
    name: box-exporter
    virtualenv: "{{ openstax_hypothesis_role.base }}"
    virtualenv_python: "{{ openstax_hypothesis_role.virtualenv_python }}"

- name: copy over application/celery management bash scripts
  template:
    src: "{{ item.value.template }}"
    dest: "{{ item.value.dest }}"
    mode: u+x
  with_dict: "{{ openstax_hypothesis_role.init_scripts }}"
  when: item.value.state|default('present') != 'absent'

- name: copy over the env files to be used by the systemd services
  template:
    src: "{{ item.value.template }}"
    dest: "{{ item.value.dest }}"
  with_dict: "{{ openstax_hypothesis_role.env_files }}"
  when: item.value.state|default('present') != 'absent'

- name: copy over the tmpfiles.d files to be used by the systemd services
  template:
    src: "{{ item.value.template }}"
    dest: "{{ item.value.dest }}"
  with_dict: "{{ openstax_hypothesis_role.tmpfiles }}"
  when: item.value.state|default('present') != 'absent'

- name: copy over the box private_key
  copy:
    content: "{{ openstax_hypothesis_role.box_rsa_private_key_content }}"
    dest: "{{ openstax_hypothesis_role.box_rsa_private_key_path }}"
    mode: 0600
    force: yes

- name: create a crontab to run the annotation export
  cron:
    name: run the annotation export for researchers
    user: "{{ openstax_hypothesis_role.user }}"
    minute: 59
    hour: 23
    job: '{{ openstax_hypothesis_role.application_dir }}/bin/export-annotations'

- name: start the h gunicorn process
  service:
    name: h
    state: started
  tags: start-h

- name: start the h.socket process
  service:
    name: h.socket
    state: started
  tags: start-worker

- name: start the h-worker process
  service:
    name: h-worker
    state: started
  tags: start-worker

- name: start the h-beat process
  service:
    name: h-beat
    state: started
  tags: start-beat
